[{"C:\\idioly_react\\idioly\\client\\src\\index.js":"1","C:\\idioly_react\\idioly\\client\\src\\reportWebVitals.js":"2","C:\\idioly_react\\idioly\\client\\src\\App.js":"3","C:\\idioly_react\\idioly\\client\\src\\layouts\\mainLayout.js":"4","C:\\idioly_react\\idioly\\client\\src\\layouts\\practiceLayout.js":"5","C:\\idioly_react\\idioly\\client\\src\\layouts\\textsLayout.js":"6","C:\\idioly_react\\idioly\\client\\src\\layouts\\homeLayout.js":"7","C:\\idioly_react\\idioly\\client\\src\\layouts\\wordsLayout.js":"8","C:\\idioly_react\\idioly\\client\\src\\dbActions.js":"9","C:\\idioly_react\\idioly\\client\\src\\layouts\\textLayout.js":"10","C:\\idioly_react\\idioly\\client\\src\\components\\wordDialog.js":"11","C:\\idioly_react\\idioly\\client\\src\\translateActions.js":"12","C:\\idioly_react\\idioly\\client\\src\\components\\translatableWord.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":638,"mtime":1610644388078,"results":"17","hashOfConfig":"15"},{"size":1548,"mtime":1610891770135,"results":"18","hashOfConfig":"15"},{"size":107,"mtime":1610534762835,"results":"19","hashOfConfig":"15"},{"size":2857,"mtime":1610704415262,"results":"20","hashOfConfig":"15"},{"size":102,"mtime":1610534805348,"results":"21","hashOfConfig":"15"},{"size":104,"mtime":1610534970736,"results":"22","hashOfConfig":"15"},{"size":1208,"mtime":1610865455938,"results":"23","hashOfConfig":"15"},{"size":2023,"mtime":1610885610637,"results":"24","hashOfConfig":"15"},{"size":2938,"mtime":1610880957900,"results":"25","hashOfConfig":"15"},{"size":1334,"mtime":1610881162988,"results":"26","hashOfConfig":"15"},{"size":1124,"mtime":1610887419875,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"15a29is",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\idioly_react\\idioly\\client\\src\\index.js",[],["62","63"],"C:\\idioly_react\\idioly\\client\\src\\reportWebVitals.js",[],"C:\\idioly_react\\idioly\\client\\src\\App.js",["64","65","66"],"import logo from './logo.svg';\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport React, { Component } from 'react';\n// import MainLayout from './pages/mainLayout';\nimport MainLayout from 'layouts/mainLayout';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n\n    this.state = {apiResponse: \"\"}\n  }\n\n  callAPI = () => {\n    fetch(\"http://localhost:9000/testapi\")\n    .then(res => res.text())\n    .then(res => this.setState({apiResponse: res}))\n  }\n\n  componentDidMount(){\n    // this.callAPI()\n  }\n\n  render(){\n    return (\n      <MainLayout />        \n    );\n  }\n}\n\nexport default App;\n","C:\\idioly_react\\idioly\\client\\src\\layouts\\mainLayout.js",["67"],"C:\\idioly_react\\idioly\\client\\src\\layouts\\practiceLayout.js",["68"],"export default function(props){\r\n    return <div id=\"textsPage\">\r\n        practice layout...\r\n    </div>\r\n}","C:\\idioly_react\\idioly\\client\\src\\layouts\\textsLayout.js",["69"],"import { getTexts, getTextsByCriterias } from 'dbActions'\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function(props){\r\n    let history = useHistory();\r\n\r\n    const [readingTexts, setReadingTexts] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [level, setLevel] = useState(\"all\");\r\n    const [type, setType] = useState(\"all\");\r\n\r\n    const language = \"Spanish\"\r\n\r\n    useEffect(() => {\r\n        getTexts(texts => {\r\n            setReadingTexts(texts)\r\n        }, error => {\r\n            setError(error)\r\n        })\r\n    }, []);\r\n\r\n    var onLevelChange = function(event){\r\n        setLevel(event.target.value);\r\n\r\n        getTextsByCriterias(language, event.target.value, type, texts => {\r\n            setReadingTexts(texts)\r\n        }, error => {\r\n            setError(error)\r\n        })\r\n    }   \r\n    \r\n    var onTypeChange = function(event){\r\n        setType(event.target.value);\r\n\r\n        getTextsByCriterias(language, level, event.target.value, texts => {\r\n            setReadingTexts(texts)\r\n        }, error => {\r\n            setError(error)\r\n        })\r\n    }   \r\n\r\n    var openText = function(readingText){\r\n        history.push({\r\n            pathname: '/text',\r\n            search: '?query=abc',\r\n            state: { readingText: readingText }\r\n        });\r\n\r\n        //and then in text layout\r\n        //useEffect(() => {\r\n    //    console.log(location.pathname); // result: '/secondpage'\r\n    //    console.log(location.search); // result: '?query=abc'\r\n    //    console.log(location.state.detail); // result: 'some_value'\r\n    // }, [location]);\r\n    }\r\n\r\n    return <div id=\"textsPage\">\r\n        text layout\r\n        {error}\r\n        <div id=\"textsFilterBar\">            \r\n            <select name=\"textLevel\" id=\"textsLevelDropDOwn\" onChange={onLevelChange}>\r\n                <option value=\"all\">Level</option>\r\n                <option value=\"super_easy\">Super Easy</option>\r\n                <option value=\"easy\">Easy</option>\r\n                <option value=\"intermediate\">Medium</option>\r\n                <option value=\"advanced\">Hard</option>            \r\n            </select>\r\n            <select name=\"textType\" id=\"textsLanguageDropDOwn\" onChange={onTypeChange}>\r\n                <option value=\"all\">Text type</option>\r\n                <option value=\"story\">Story</option>\r\n                <option value=\"conversation\">conversation</option>\r\n                <option value=\"article\">article</option>            \r\n                <option value=\"lyrics\">lyrics</option>            \r\n            </select>\r\n        </div>\r\n\r\n        text list: \r\n        {           \r\n            readingTexts.map(readingText => <div key={readingText.title} onClick={() => openText(readingText)}> {readingText.title}  </div>)\r\n        }\r\n    </div>\r\n}","C:\\idioly_react\\idioly\\client\\src\\layouts\\homeLayout.js",["70"],"export default function(props){\r\n    return <div id=\"textsPage\">\r\n       home layout \r\n\r\n    </div>\r\n}","C:\\idioly_react\\idioly\\client\\src\\layouts\\wordsLayout.js",["71"],"export default function(props){\r\n    return <div id=\"textsPage\">\r\n        words layout...\r\n    </div>\r\n}","C:\\idioly_react\\idioly\\client\\src\\dbActions.js",[],"C:\\idioly_react\\idioly\\client\\src\\layouts\\textLayout.js",["72","73","74","75","76","77","78","79","80","81","82","83"],"C:\\idioly_react\\idioly\\client\\src\\components\\wordDialog.js",["84","85"],"import React, { useImperativeHandle, forwardRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport './components.css'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { translateWord } from 'translateActions'\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    // top: `${top}%`,\r\n    // margin:'auto'\r\n    // left: `${left}%`,\r\n    // transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst wordDialog = forwardRef((props, ref) =>{ \r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(props.isOpen);\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [word, setWord] = React.useState(\"\");\r\n  const [translation, setTranslation] = React.useState(\"\");\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    imperatoveHandleOpen(dialogTitle, word) {\r\n        setTitle(dialogTitle)\r\n        setWord(word)\r\n        handleOpen()        \r\n        translateWordAsync(word)\r\n    },\r\n\r\n    imperatoveHandleClose() {\r\n        handleClose()\r\n    }\r\n  }));\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const translateWordAsync = (word) => {\r\n    translateWord(word, \"es\", \"en\", translation => {\r\n        setTranslation(translation)\r\n    }, error => {\r\n        alert(\"failed to translate word: \" + error)\r\n    })\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const wordChanged = e => {\r\n    setWord(e.target.value)\r\n  }\r\n\r\n\r\n\r\n  const translationChanged = e => {\r\n    setTranslation(e.target.value)\r\n  }\r\n\r\n  return (\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        style={{ alignItems: \"center\", justifyContent: \"center\", display: 'flex', }}        \r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"wordDialogHeader\">{title}</h2>\r\n            <div id=\"wordDialogFields\">\r\n                <TextField id=\"wordDialogWord\" label=\"Word\" value={word}  onChange={wordChanged} />\r\n                <TextField id=\"wordDialogWord\" label=\"Translation\" value={translation} onChange={translationChanged} />\r\n                <Button color=\"secondary\" id=\"wordDialogButton\" onClick={() => props.buttonClicked } >\r\n                    Add\r\n                </Button>\r\n            </div>\r\n        </div>\r\n      </Modal>\r\n  );\r\n})\r\n\r\nexport default wordDialog;\r\n","C:\\idioly_react\\idioly\\client\\src\\translateActions.js",["86"],"\r\n\r\n//\r\nexport function translateWord(word, fromLanguage, toLanguage, onSuccess, onFail){\r\n    const axios = require('axios').default;\r\n    const { v4: uuidv4 } = require('uuid');\r\n\r\n    var subscriptionKey = \"4cf20fe539014953b8a5dacf6730f93b\";\r\n    var endpoint = \"https://api.cognitive.microsofttranslator.com\";\r\n\r\n    // Add your location, also known as region. The default is global.\r\n    // This is required if using a Cognitive Services resource.\r\n    var location = \"westeurope\";\r\n\r\n    axios({\r\n        baseURL: endpoint,\r\n        url: '/translate',\r\n        method: 'post',\r\n        headers: {\r\n            'Ocp-Apim-Subscription-Key': subscriptionKey,\r\n            'Ocp-Apim-Subscription-Region': location,\r\n            'Content-type': 'application/json',\r\n            'X-ClientTraceId': uuidv4().toString()\r\n        },\r\n        params: {\r\n            'api-version': '3.0',\r\n            'from': fromLanguage,\r\n            'to': toLanguage\r\n        },\r\n        data: [{\r\n            'text': word\r\n        }],\r\n        responseType: 'json'\r\n    }).then(function(response){\r\n        if(response.data[0].translations[0].text == \"\"){\r\n            onFail(\"Failed to translate word\")\r\n        }else{\r\n            onSuccess(response.data[0].translations[0].text)\r\n        }\r\n    }).catch(error => {\r\n        onFail(error)\r\n    })\r\n}","C:\\idioly_react\\idioly\\client\\src\\components\\translatableWord.js",["87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":12},{"ruleId":"92","severity":1,"message":"96","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":16},{"ruleId":"92","severity":1,"message":"97","line":4,"column":17,"nodeType":"94","messageId":"95","endLine":4,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":16,"column":30,"nodeType":"100","endLine":16,"endColumn":53},{"ruleId":"101","severity":1,"message":"102","line":1,"column":1,"nodeType":"103","endLine":5,"endColumn":2},{"ruleId":"101","severity":1,"message":"102","line":5,"column":1,"nodeType":"103","endLine":83,"endColumn":2},{"ruleId":"101","severity":1,"message":"102","line":1,"column":1,"nodeType":"103","endLine":6,"endColumn":2},{"ruleId":"101","severity":1,"message":"102","line":1,"column":1,"nodeType":"103","endLine":5,"endColumn":2},{"ruleId":"92","severity":1,"message":"104","line":2,"column":38,"nodeType":"94","messageId":"95","endLine":2,"endColumn":44},{"ruleId":"101","severity":1,"message":"102","line":6,"column":1,"nodeType":"103","endLine":62,"endColumn":2},{"ruleId":"92","severity":1,"message":"105","line":9,"column":12,"nodeType":"94","messageId":"95","endLine":9,"endColumn":24},{"ruleId":"92","severity":1,"message":"106","line":9,"column":26,"nodeType":"94","messageId":"95","endLine":9,"endColumn":41},{"ruleId":"107","severity":1,"message":"108","line":16,"column":8,"nodeType":"109","endLine":16,"endColumn":10,"suggestions":"110"},{"ruleId":"92","severity":1,"message":"111","line":21,"column":9,"nodeType":"94","messageId":"95","endLine":21,"endColumn":10},{"ruleId":"92","severity":1,"message":"112","line":28,"column":11,"nodeType":"94","messageId":"95","endLine":28,"endColumn":26},{"ruleId":"113","severity":1,"message":"114","line":34,"column":23,"nodeType":"115","messageId":"116","endLine":34,"endColumn":24,"suggestions":"117"},{"ruleId":"113","severity":1,"message":"114","line":41,"column":23,"nodeType":"115","messageId":"116","endLine":41,"endColumn":24,"suggestions":"118"},{"ruleId":"92","severity":1,"message":"119","line":46,"column":11,"nodeType":"94","messageId":"95","endLine":46,"endColumn":25},{"ruleId":"113","severity":1,"message":"120","line":49,"column":25,"nodeType":"115","messageId":"116","endLine":49,"endColumn":26,"suggestions":"121"},{"ruleId":"113","severity":1,"message":"122","line":49,"column":28,"nodeType":"115","messageId":"116","endLine":49,"endColumn":29,"suggestions":"123"},{"ruleId":"92","severity":1,"message":"124","line":14,"column":9,"nodeType":"94","messageId":"95","endLine":14,"endColumn":12},{"ruleId":"92","severity":1,"message":"125","line":15,"column":9,"nodeType":"94","messageId":"95","endLine":15,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":35,"column":50,"nodeType":"128","messageId":"129","endLine":35,"endColumn":52},{"ruleId":"98","severity":1,"message":"99","line":30,"column":28,"nodeType":"100","endLine":30,"endColumn":134},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'Component' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useRef' is defined but never used.","'isDialogOpen' is assigned a value but never used.","'setIsDialogOpen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.state.readingText.text'. Either include it or remove the dependency array.","ArrayExpression",["132"],"'x' is assigned a value but never used.","'closeWordDialog' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\s.","Literal","unnecessaryEscape",["133","134"],["135","136"],"'wordClickEvent' is assigned a value but never used.","Unnecessary escape character: \\,.",["137","138"],"Unnecessary escape character: \\..",["139","140"],"'top' is assigned a value but never used.","'left' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"messageId":"143","fix":"144","desc":"145"},{"messageId":"146","fix":"147","desc":"148"},{"messageId":"143","fix":"149","desc":"145"},{"messageId":"146","fix":"150","desc":"148"},{"messageId":"143","fix":"151","desc":"145"},{"messageId":"146","fix":"152","desc":"148"},{"messageId":"143","fix":"153","desc":"145"},{"messageId":"146","fix":"154","desc":"148"},"Update the dependencies array to be: [location.state.readingText.text]",{"range":"155","text":"156"},"removeEscape",{"range":"157","text":"158"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"159","text":"160"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"161","text":"158"},{"range":"162","text":"160"},{"range":"163","text":"158"},{"range":"164","text":"160"},{"range":"165","text":"158"},{"range":"166","text":"160"},[593,595],"[location.state.readingText.text]",[1039,1040],"",[1039,1039],"\\",[1241,1242],[1241,1241],[1511,1512],[1511,1511],[1514,1515],[1514,1514]]