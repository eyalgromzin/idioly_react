[{"C:\\idioly_react\\idioly\\client\\src\\index.js":"1","C:\\idioly_react\\idioly\\client\\src\\reportWebVitals.js":"2","C:\\idioly_react\\idioly\\client\\src\\App.js":"3","C:\\idioly_react\\idioly\\client\\src\\layouts\\mainLayout.js":"4","C:\\idioly_react\\idioly\\client\\src\\layouts\\practiceLayout.js":"5","C:\\idioly_react\\idioly\\client\\src\\layouts\\textsLayout.js":"6","C:\\idioly_react\\idioly\\client\\src\\layouts\\homeLayout.js":"7","C:\\idioly_react\\idioly\\client\\src\\layouts\\wordsLayout.js":"8","C:\\idioly_react\\idioly\\client\\src\\dbActions.js":"9","C:\\idioly_react\\idioly\\client\\src\\layouts\\textLayout.js":"10","C:\\idioly_react\\idioly\\client\\src\\components\\wordDialog.js":"11","C:\\idioly_react\\idioly\\client\\src\\translateActions.js":"12","C:\\idioly_react\\idioly\\client\\src\\components\\translatableWord.js":"13","C:\\idioly_react\\idioly\\client\\src\\common.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":638,"mtime":1610644388078,"results":"18","hashOfConfig":"16"},{"size":1718,"mtime":1610898044984,"results":"19","hashOfConfig":"16"},{"size":107,"mtime":1610534762835,"results":"20","hashOfConfig":"16"},{"size":2857,"mtime":1610704415262,"results":"21","hashOfConfig":"16"},{"size":102,"mtime":1610534805348,"results":"22","hashOfConfig":"16"},{"size":104,"mtime":1610534970736,"results":"23","hashOfConfig":"16"},{"size":1208,"mtime":1610865455938,"results":"24","hashOfConfig":"16"},{"size":1001,"mtime":1610897412203,"results":"25","hashOfConfig":"16"},{"size":2938,"mtime":1610880957900,"results":"26","hashOfConfig":"16"},{"size":1334,"mtime":1610881162988,"results":"27","hashOfConfig":"16"},{"size":3243,"mtime":1610899536689,"results":"28","hashOfConfig":"16"},{"size":774,"mtime":1610897102921,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"15a29is",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\idioly_react\\idioly\\client\\src\\index.js",[],["66","67"],"C:\\idioly_react\\idioly\\client\\src\\reportWebVitals.js",[],"C:\\idioly_react\\idioly\\client\\src\\App.js",["68","69","70"],"import logo from './logo.svg';\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport React, { Component } from 'react';\n// import MainLayout from './pages/mainLayout';\nimport MainLayout from 'layouts/mainLayout';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n\n    this.state = {apiResponse: \"\"}\n  }\n\n  callAPI = () => {\n    fetch(\"http://localhost:9000/testapi\")\n    .then(res => res.text())\n    .then(res => this.setState({apiResponse: res}))\n  }\n\n  componentDidMount(){\n    // this.callAPI()\n  }\n\n  render(){\n    return (\n      <MainLayout />        \n    );\n  }\n}\n\nexport default App;\n","C:\\idioly_react\\idioly\\client\\src\\layouts\\mainLayout.js",["71"],"C:\\idioly_react\\idioly\\client\\src\\layouts\\practiceLayout.js",["72"],"export default function(props){\r\n    return <div id=\"textsPage\">\r\n        practice layout...\r\n    </div>\r\n}","C:\\idioly_react\\idioly\\client\\src\\layouts\\textsLayout.js",["73"],"import { getTexts, getTextsByCriterias } from 'dbActions'\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function(props){\r\n    let history = useHistory();\r\n\r\n    const [readingTexts, setReadingTexts] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [level, setLevel] = useState(\"all\");\r\n    const [type, setType] = useState(\"all\");\r\n\r\n    const language = \"Spanish\"\r\n\r\n    useEffect(() => {\r\n        getTexts(texts => {\r\n            setReadingTexts(texts)\r\n        }, error => {\r\n            setError(error)\r\n        })\r\n    }, []);\r\n\r\n    var onLevelChange = function(event){\r\n        setLevel(event.target.value);\r\n\r\n        getTextsByCriterias(language, event.target.value, type, texts => {\r\n            setReadingTexts(texts)\r\n        }, error => {\r\n            setError(error)\r\n        })\r\n    }   \r\n    \r\n    var onTypeChange = function(event){\r\n        setType(event.target.value);\r\n\r\n        getTextsByCriterias(language, level, event.target.value, texts => {\r\n            setReadingTexts(texts)\r\n        }, error => {\r\n            setError(error)\r\n        })\r\n    }   \r\n\r\n    var openText = function(readingText){\r\n        history.push({\r\n            pathname: '/text',\r\n            search: '?query=abc',\r\n            state: { readingText: readingText }\r\n        });\r\n\r\n        //and then in text layout\r\n        //useEffect(() => {\r\n    //    console.log(location.pathname); // result: '/secondpage'\r\n    //    console.log(location.search); // result: '?query=abc'\r\n    //    console.log(location.state.detail); // result: 'some_value'\r\n    // }, [location]);\r\n    }\r\n\r\n    return <div id=\"textsPage\">\r\n        text layout\r\n        {error}\r\n        <div id=\"textsFilterBar\">            \r\n            <select name=\"textLevel\" id=\"textsLevelDropDOwn\" onChange={onLevelChange}>\r\n                <option value=\"all\">Level</option>\r\n                <option value=\"super_easy\">Super Easy</option>\r\n                <option value=\"easy\">Easy</option>\r\n                <option value=\"intermediate\">Medium</option>\r\n                <option value=\"advanced\">Hard</option>            \r\n            </select>\r\n            <select name=\"textType\" id=\"textsLanguageDropDOwn\" onChange={onTypeChange}>\r\n                <option value=\"all\">Text type</option>\r\n                <option value=\"story\">Story</option>\r\n                <option value=\"conversation\">conversation</option>\r\n                <option value=\"article\">article</option>            \r\n                <option value=\"lyrics\">lyrics</option>            \r\n            </select>\r\n        </div>\r\n\r\n        text list: \r\n        {           \r\n            readingTexts.map(readingText => <div key={readingText.title} onClick={() => openText(readingText)}> {readingText.title}  </div>)\r\n        }\r\n    </div>\r\n}","C:\\idioly_react\\idioly\\client\\src\\layouts\\homeLayout.js",["74"],"export default function(props){\r\n    return <div id=\"textsPage\">\r\n       home layout \r\n\r\n    </div>\r\n}","C:\\idioly_react\\idioly\\client\\src\\layouts\\wordsLayout.js",["75"],"export default function(props){\r\n    return <div id=\"textsPage\">\r\n        words layout...\r\n    </div>\r\n}","C:\\idioly_react\\idioly\\client\\src\\dbActions.js",[],"C:\\idioly_react\\idioly\\client\\src\\layouts\\textLayout.js",["76","77","78","79","80"],"C:\\idioly_react\\idioly\\client\\src\\components\\wordDialog.js",["81","82"],"import React, { useImperativeHandle, forwardRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport './components.css'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { translateWord } from 'translateActions'\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    // top: `${top}%`,\r\n    // margin:'auto'\r\n    // left: `${left}%`,\r\n    // transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst wordDialog = forwardRef((props, ref) =>{ \r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(props.isOpen);\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [word, setWord] = React.useState(\"\");\r\n  const [translation, setTranslation] = React.useState(\"\");\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    imperatoveHandleOpen(dialogTitle, word) {\r\n        setTitle(dialogTitle)\r\n        setWord(word)\r\n        handleOpen()        \r\n        translateWordAsync(word)\r\n    },\r\n\r\n    imperatoveHandleClose() {\r\n        handleClose()\r\n    }\r\n  }));\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const translateWordAsync = (word) => {\r\n    translateWord(word, \"es\", \"en\", translation => {\r\n        setTranslation(translation)\r\n    }, error => {\r\n        alert(\"failed to translate word: \" + error)\r\n    })\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const wordChanged = e => {\r\n    setWord(e.target.value)\r\n  }\r\n\r\n\r\n\r\n  const translationChanged = e => {\r\n    setTranslation(e.target.value)\r\n  }\r\n\r\n  return (\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        style={{ alignItems: \"center\", justifyContent: \"center\", display: 'flex', }}        \r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"wordDialogHeader\">{title}</h2>\r\n            <div id=\"wordDialogFields\">\r\n                <TextField id=\"wordDialogWord\" label=\"Word\" value={word}  onChange={wordChanged} />\r\n                <TextField id=\"wordDialogWord\" label=\"Translation\" value={translation} onChange={translationChanged} />\r\n                <Button color=\"secondary\" id=\"wordDialogButton\" onClick={() => props.buttonClicked } >\r\n                    Add\r\n                </Button>\r\n            </div>\r\n        </div>\r\n      </Modal>\r\n  );\r\n})\r\n\r\nexport default wordDialog;\r\n","C:\\idioly_react\\idioly\\client\\src\\translateActions.js",["83"],"\r\n\r\n//\r\nexport function translateWord(word, fromLanguage, toLanguage, onSuccess, onFail){\r\n    const axios = require('axios').default;\r\n    const { v4: uuidv4 } = require('uuid');\r\n\r\n    var subscriptionKey = \"4cf20fe539014953b8a5dacf6730f93b\";\r\n    var endpoint = \"https://api.cognitive.microsofttranslator.com\";\r\n\r\n    // Add your location, also known as region. The default is global.\r\n    // This is required if using a Cognitive Services resource.\r\n    var location = \"westeurope\";\r\n\r\n    axios({\r\n        baseURL: endpoint,\r\n        url: '/translate',\r\n        method: 'post',\r\n        headers: {\r\n            'Ocp-Apim-Subscription-Key': subscriptionKey,\r\n            'Ocp-Apim-Subscription-Region': location,\r\n            'Content-type': 'application/json',\r\n            'X-ClientTraceId': uuidv4().toString()\r\n        },\r\n        params: {\r\n            'api-version': '3.0',\r\n            'from': fromLanguage,\r\n            'to': toLanguage\r\n        },\r\n        data: [{\r\n            'text': word\r\n        }],\r\n        responseType: 'json'\r\n    }).then(function(response){\r\n        if(response.data[0].translations[0].text == \"\"){\r\n            onFail(\"Failed to translate word\")\r\n        }else{\r\n            onSuccess(response.data[0].translations[0].text)\r\n        }\r\n    }).catch(error => {\r\n        onFail(error)\r\n    })\r\n}","C:\\idioly_react\\idioly\\client\\src\\components\\translatableWord.js",["84","85","86","87","88","89"],"C:\\idioly_react\\idioly\\client\\src\\common.js",["90","91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":1,"column":8,"nodeType":"98","messageId":"99","endLine":1,"endColumn":12},{"ruleId":"96","severity":1,"message":"100","line":3,"column":10,"nodeType":"98","messageId":"99","endLine":3,"endColumn":16},{"ruleId":"96","severity":1,"message":"101","line":4,"column":17,"nodeType":"98","messageId":"99","endLine":4,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":17,"column":17,"nodeType":"104","endLine":17,"endColumn":86},{"ruleId":"105","severity":1,"message":"106","line":1,"column":1,"nodeType":"107","endLine":5,"endColumn":2},{"ruleId":"105","severity":1,"message":"106","line":5,"column":1,"nodeType":"107","endLine":83,"endColumn":2},{"ruleId":"105","severity":1,"message":"106","line":1,"column":1,"nodeType":"107","endLine":6,"endColumn":2},{"ruleId":"105","severity":1,"message":"106","line":1,"column":1,"nodeType":"107","endLine":5,"endColumn":2},{"ruleId":"96","severity":1,"message":"108","line":2,"column":38,"nodeType":"98","messageId":"99","endLine":2,"endColumn":44},{"ruleId":"105","severity":1,"message":"106","line":6,"column":1,"nodeType":"107","endLine":30,"endColumn":2},{"ruleId":"96","severity":1,"message":"109","line":9,"column":12,"nodeType":"98","messageId":"99","endLine":9,"endColumn":24},{"ruleId":"96","severity":1,"message":"110","line":9,"column":26,"nodeType":"98","messageId":"99","endLine":9,"endColumn":41},{"ruleId":"111","severity":1,"message":"112","line":16,"column":8,"nodeType":"113","endLine":16,"endColumn":10,"suggestions":"114"},{"ruleId":"96","severity":1,"message":"115","line":14,"column":9,"nodeType":"98","messageId":"99","endLine":14,"endColumn":12},{"ruleId":"96","severity":1,"message":"116","line":15,"column":9,"nodeType":"98","messageId":"99","endLine":15,"endColumn":13},{"ruleId":"117","severity":1,"message":"118","line":35,"column":50,"nodeType":"119","messageId":"120","endLine":35,"endColumn":52},{"ruleId":"96","severity":1,"message":"121","line":4,"column":59,"nodeType":"98","messageId":"99","endLine":4,"endColumn":69},{"ruleId":"96","severity":1,"message":"122","line":5,"column":9,"nodeType":"98","messageId":"99","endLine":5,"endColumn":17},{"ruleId":"96","severity":1,"message":"123","line":5,"column":19,"nodeType":"98","messageId":"99","endLine":5,"endColumn":28},{"ruleId":"117","severity":1,"message":"118","line":36,"column":48,"nodeType":"119","messageId":"120","endLine":36,"endColumn":50},{"ruleId":"117","severity":1,"message":"118","line":56,"column":43,"nodeType":"119","messageId":"120","endLine":56,"endColumn":45},{"ruleId":"102","severity":1,"message":"103","line":70,"column":28,"nodeType":"104","endLine":70,"endColumn":134},{"ruleId":"124","severity":1,"message":"125","line":19,"column":19,"nodeType":"126","messageId":"127","endLine":19,"endColumn":20,"suggestions":"128"},{"ruleId":"124","severity":1,"message":"125","line":26,"column":19,"nodeType":"126","messageId":"127","endLine":26,"endColumn":20,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'Component' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useRef' is defined but never used.","'isDialogOpen' is assigned a value but never used.","'setIsDialogOpen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.state.readingText.text'. Either include it or remove the dependency array.","ArrayExpression",["132"],"'top' is assigned a value but never used.","'left' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'isLoggedIn' is defined but never used.","'trimLeft' is defined but never used.","'trimRight' is defined but never used.","no-useless-escape","Unnecessary escape character: \\s.","Literal","unnecessaryEscape",["133","134"],["135","136"],"no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"messageId":"139","fix":"140","desc":"141"},{"messageId":"142","fix":"143","desc":"144"},{"messageId":"139","fix":"145","desc":"141"},{"messageId":"142","fix":"146","desc":"144"},"Update the dependencies array to be: [location.state.readingText.text]",{"range":"147","text":"148"},"removeEscape",{"range":"149","text":"150"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"151","text":"152"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"153","text":"150"},{"range":"154","text":"152"},[593,595],"[location.state.readingText.text]",[506,507],"",[506,506],"\\",[691,692],[691,691]]