[{"C:\\idioly_react\\idioly\\client\\src\\index.js":"1","C:\\idioly_react\\idioly\\client\\src\\reportWebVitals.js":"2","C:\\idioly_react\\idioly\\client\\src\\App.js":"3","C:\\idioly_react\\idioly\\client\\src\\layouts\\mainLayout.js":"4","C:\\idioly_react\\idioly\\client\\src\\layouts\\practiceLayout.js":"5","C:\\idioly_react\\idioly\\client\\src\\layouts\\textsLayout.js":"6","C:\\idioly_react\\idioly\\client\\src\\layouts\\homeLayout.js":"7","C:\\idioly_react\\idioly\\client\\src\\layouts\\wordsLayout.js":"8","C:\\idioly_react\\idioly\\client\\src\\layouts\\textLayout.js":"9","C:\\idioly_react\\idioly\\client\\src\\components\\wordDialog.js":"10","C:\\idioly_react\\idioly\\client\\src\\translateActions.js":"11","C:\\idioly_react\\idioly\\client\\src\\components\\translatableWord.js":"12","C:\\idioly_react\\idioly\\client\\src\\common.js":"13","C:\\idioly_react\\idioly\\client\\src\\layouts\\loginScreen.js":"14","C:\\idioly_react\\idioly\\client\\src\\actions\\commonActions.js":"15","C:\\idioly_react\\idioly\\client\\src\\store.js":"16","C:\\idioly_react\\idioly\\client\\src\\reducers\\types.js":"17","C:\\idioly_react\\idioly\\client\\src\\reducers\\rootReducer.js":"18","C:\\idioly_react\\idioly\\client\\src\\reducers\\commonReducer.js":"19","C:\\idioly_react\\idioly\\client\\src\\components\\google.js":"20","C:\\idioly_react\\idioly\\client\\src\\components\\facebook.js":"21","C:\\idioly_react\\idioly\\client\\src\\actions\\userActions.js":"22","C:\\idioly_react\\idioly\\client\\src\\actions\\userWordsActions.js":"23","C:\\idioly_react\\idioly\\client\\src\\actions\\textsActions.js":"24","C:\\idioly_react\\idioly\\client\\src\\layouts\\addTextLayout.js":"25"},{"size":500,"mtime":499162500000,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":755,"mtime":1610960795083,"results":"29","hashOfConfig":"27"},{"size":2384,"mtime":1611064784043,"results":"30","hashOfConfig":"27"},{"size":107,"mtime":1610534762835,"results":"31","hashOfConfig":"27"},{"size":3177,"mtime":1611061008438,"results":"32","hashOfConfig":"27"},{"size":102,"mtime":1610534805348,"results":"33","hashOfConfig":"27"},{"size":104,"mtime":1610534970736,"results":"34","hashOfConfig":"27"},{"size":950,"mtime":1610962210438,"results":"35","hashOfConfig":"27"},{"size":2938,"mtime":1610880957900,"results":"36","hashOfConfig":"27"},{"size":1334,"mtime":1610881162988,"results":"37","hashOfConfig":"27"},{"size":5622,"mtime":1611064784043,"results":"38","hashOfConfig":"27"},{"size":1609,"mtime":1611135707447,"results":"39","hashOfConfig":"27"},{"size":2590,"mtime":1610961383617,"results":"40","hashOfConfig":"27"},{"size":415,"mtime":1610953293594,"results":"41","hashOfConfig":"27"},{"size":353,"mtime":1610951739331,"results":"42","hashOfConfig":"27"},{"size":751,"mtime":1610976448679,"results":"43","hashOfConfig":"27"},{"size":194,"mtime":1610951493118,"results":"44","hashOfConfig":"27"},{"size":1648,"mtime":1610976501302,"results":"45","hashOfConfig":"27"},{"size":2607,"mtime":1610976447376,"results":"46","hashOfConfig":"27"},{"size":3423,"mtime":1610954112791,"results":"47","hashOfConfig":"27"},{"size":3184,"mtime":1610961857878,"results":"48","hashOfConfig":"27"},{"size":1267,"mtime":1610976844855,"results":"49","hashOfConfig":"27"},{"size":2634,"mtime":1611133013472,"results":"50","hashOfConfig":"27"},{"size":6063,"mtime":1611137260779,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"15a29is",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"54"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\idioly_react\\idioly\\client\\src\\index.js",[],["119","120"],"C:\\idioly_react\\idioly\\client\\src\\reportWebVitals.js",[],"C:\\idioly_react\\idioly\\client\\src\\App.js",["121","122","123"],"import logo from './logo.svg';\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport React, { Component } from 'react';\n// import MainLayout from './pages/mainLayout';\nimport MainLayout from 'layouts/mainLayout';\nimport store from 'store'\nimport { Provider } from 'react-redux';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n\n    this.state = {apiResponse: \"\"}\n  }\n\n  callAPI = () => {\n    fetch(\"http://localhost:9000/testapi\")\n    .then(res => res.text())\n    .then(res => this.setState({apiResponse: res}))\n  }\n\n  componentDidMount(){\n    // this.callAPI()\n  }\n\n  render(){\n    return (\n      <Provider store={store}>\n        <MainLayout />        \n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","C:\\idioly_react\\idioly\\client\\src\\layouts\\mainLayout.js",["124"],"import TextsLayout from 'layouts/textsLayout'\r\nimport PracticeLayout from 'layouts/practiceLayout'\r\nimport HomeLayout from 'layouts/homeLayout'\r\nimport WordsLayout from 'layouts/wordsLayout'\r\nimport TextLayout from 'layouts/textLayout'\r\nimport AddText from 'layouts/addTextLayout'\r\nimport LoginScreen from 'layouts/loginScreen'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link } from 'react-router-dom';\r\nimport './layouts.css'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function MainLayout(){\r\n    const isShowLogin = useSelector(state => {\r\n        return state.commonReducer.isShowLogin\r\n    })\r\n\r\n    return <div id=\"mainLayout\">        \r\n            { isShowLogin? <LoginScreen /> : \"\"}\r\n            {/* <LoginScreen /> */}\r\n\r\n            <Router>\r\n                <div id=\"topBar\">\r\n                    <img id=\"topBarLogoImage\" src={require(\"images/logo.png\").default} /> \r\n                    <span id=\"topBarIdioly\">Idioly</span>\r\n                    \r\n                </div>\r\n                <div id=\"buttons_layout\">     \r\n                    <li className=\"topBarButton\"><Link to=\"/texts\">texts </Link></li>\r\n                    <li className=\"topBarButton\"><Link to=\"/practice\">practice </Link></li>\r\n                    {/* <li className=\"topBarButton\"><Link to=\"/words\">words</Link></li> */}\r\n                </div>\r\n                <br />\r\n                \r\n                <div id=\"mainContentContainer\">\r\n                    <Switch>\r\n                        <Route path=\"/text\" >\r\n                            <TextLayout />\r\n                        </Route>\r\n                        <Route path=\"/addtext\" >\r\n                            <AddText />\r\n                        </Route>\r\n                        <Route path=\"/texts\" >\r\n                            <TextsLayout />\r\n                        </Route>\r\n                        <Route path=\"/practice\" > \r\n                            <PracticeLayout />\r\n                        </Route>\r\n                        <Route path=\"/words\" > \r\n                            <WordsLayout />\r\n                        </Route>\r\n                        <Route path=\"/\" >   {/* needs to be last */}\r\n                            <HomeLayout />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n       \r\n    </div>\r\n}","C:\\idioly_react\\idioly\\client\\src\\layouts\\practiceLayout.js",["125"],"export default function(props){\r\n    return <div id=\"textsPage\">\r\n        practice layout...\r\n    </div>\r\n}","C:\\idioly_react\\idioly\\client\\src\\layouts\\textsLayout.js",["126","127","128"],"import { showLogInScreen } from 'actions/commonActions';\r\nimport { getTextsByCriterias } from 'actions/textsActions'\r\nimport {getTexts} from 'actions/textsActions'\r\nimport { isLoggedIn } from 'common';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function(props){\r\n    let history = useHistory();\r\n\r\n    const [readingTexts, setReadingTexts] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [level, setLevel] = useState(\"all\");\r\n    const [type, setType] = useState(\"all\");\r\n\r\n    const isLoggedIn = useSelector(state => { \r\n        return state.commonReducer.loggedInWith != \"NONE\"\r\n    })\r\n\r\n    const language = \"Spanish\"\r\n\r\n    useEffect(() => {\r\n        getTexts(texts => {\r\n            setReadingTexts(texts)\r\n        }, error => {\r\n            setError(error)\r\n        })\r\n    }, []);\r\n\r\n    var onLevelChange = function(event){\r\n        setLevel(event.target.value);\r\n\r\n        getTextsByCriterias(language, event.target.value, type, texts => {\r\n            setReadingTexts(texts)\r\n        }, error => {\r\n            setError(error)\r\n        })\r\n    }   \r\n    \r\n    var onTypeChange = function(event){\r\n        setType(event.target.value);\r\n\r\n        getTextsByCriterias(language, level, event.target.value, texts => {\r\n            setReadingTexts(texts)\r\n        }, error => {\r\n            setError(error)\r\n        })\r\n    }   \r\n\r\n    var openText = function(readingText){\r\n        history.push({\r\n            pathname: '/text',\r\n            search: '?query=abc',\r\n            state: { readingText: readingText }\r\n        });\r\n    }\r\n\r\n    var openAddTextLayout = function(){\r\n        if(isLoggedIn){\r\n            history.push({\r\n                pathname: '/addText',  \r\n            });\r\n        }else{\r\n            showLogInScreen()\r\n        }\r\n    }\r\n\r\n    return <div id=\"textsPage\">\r\n        {error}\r\n        <div id=\"textsFilterBar\">            \r\n            <select name=\"textLevel\" id=\"textsLevelDropDOwn\" onChange={onLevelChange}>\r\n                <option value=\"all\">Level</option>\r\n                <option value=\"super_easy\">Super Easy</option>\r\n                <option value=\"easy\">Easy</option>\r\n                <option value=\"intermediate\">Medium</option>\r\n                <option value=\"advanced\">Hard</option>            \r\n            </select>\r\n            <select name=\"textType\" id=\"textsLanguageDropDown\" onChange={onTypeChange}>\r\n                <option value=\"all\">Text type</option>\r\n                <option value=\"story\">Story</option>\r\n                <option value=\"conversation\">conversation</option>\r\n                <option value=\"article\">article</option>            \r\n                <option value=\"lyrics\">lyrics</option>            \r\n            </select>\r\n            <div id=\"addTextButton\" onClick={() => openAddTextLayout()}>Add text </div>\r\n        </div>\r\n        <div id=\"textsList\">\r\n        {           \r\n            readingTexts.map(readingText => <div key={readingText.title} onClick={() => openText(readingText)}> {readingText.title}  </div>)\r\n        }\r\n        </div>\r\n    </div>\r\n}","C:\\idioly_react\\idioly\\client\\src\\layouts\\homeLayout.js",["129"],"export default function(props){\r\n    return <div id=\"textsPage\">\r\n       home layout \r\n\r\n    </div>\r\n}","C:\\idioly_react\\idioly\\client\\src\\layouts\\wordsLayout.js",["130"],"export default function(props){\r\n    return <div id=\"textsPage\">\r\n        words layout...\r\n    </div>\r\n}","C:\\idioly_react\\idioly\\client\\src\\layouts\\textLayout.js",["131","132","133"],"import { useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport WordDialog from 'components/wordDialog'\r\nimport TranslatableWord from 'components/translatableWord'\r\n\r\n\r\nexport default function(props){\r\n    const location = useLocation();\r\n    const [textWords, setTextWords] = useState([])\r\n\r\n    \r\n    \r\n    // const wordDialogRef = useRef();\r\n    const wordDialogRef = React.createRef();\r\n\r\n    useEffect(() => {\r\n        setTextWords(location.state.readingText.text.split(\" \"))\r\n    }, [])\r\n\r\n    const addWordDialogButtonClicked = (word, translation) => {\r\n        alert(word + \" \" + translation)\r\n    }\r\n\r\n    \r\n\r\n    return <div id=\"textContent\">        \r\n        {\r\n            textWords.map( word => <TranslatableWord word={word} /> )\r\n        }\r\n        <WordDialog ref={wordDialogRef} buttonClicked={(word, translation) => addWordDialogButtonClicked(word, translation)} />\r\n    </div>\r\n}","C:\\idioly_react\\idioly\\client\\src\\components\\wordDialog.js",["134","135"],"import React, { useImperativeHandle, forwardRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport './components.css'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { translateWord } from 'translateActions'\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    // top: `${top}%`,\r\n    // margin:'auto'\r\n    // left: `${left}%`,\r\n    // transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst wordDialog = forwardRef((props, ref) =>{ \r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(props.isOpen);\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [word, setWord] = React.useState(\"\");\r\n  const [translation, setTranslation] = React.useState(\"\");\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    imperatoveHandleOpen(dialogTitle, word) {\r\n        setTitle(dialogTitle)\r\n        setWord(word)\r\n        handleOpen()        \r\n        translateWordAsync(word)\r\n    },\r\n\r\n    imperatoveHandleClose() {\r\n        handleClose()\r\n    }\r\n  }));\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const translateWordAsync = (word) => {\r\n    translateWord(word, \"es\", \"en\", translation => {\r\n        setTranslation(translation)\r\n    }, error => {\r\n        alert(\"failed to translate word: \" + error)\r\n    })\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const wordChanged = e => {\r\n    setWord(e.target.value)\r\n  }\r\n\r\n\r\n\r\n  const translationChanged = e => {\r\n    setTranslation(e.target.value)\r\n  }\r\n\r\n  return (\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        style={{ alignItems: \"center\", justifyContent: \"center\", display: 'flex', }}        \r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"wordDialogHeader\">{title}</h2>\r\n            <div id=\"wordDialogFields\">\r\n                <TextField id=\"wordDialogWord\" label=\"Word\" value={word}  onChange={wordChanged} />\r\n                <TextField id=\"wordDialogWord\" label=\"Translation\" value={translation} onChange={translationChanged} />\r\n                <Button color=\"secondary\" id=\"wordDialogButton\" onClick={() => props.buttonClicked } >\r\n                    Add\r\n                </Button>\r\n            </div>\r\n        </div>\r\n      </Modal>\r\n  );\r\n})\r\n\r\nexport default wordDialog;\r\n","C:\\idioly_react\\idioly\\client\\src\\translateActions.js",["136"],"\r\n\r\n//\r\nexport function translateWord(word, fromLanguage, toLanguage, onSuccess, onFail){\r\n    const axios = require('axios').default;\r\n    const { v4: uuidv4 } = require('uuid');\r\n\r\n    var subscriptionKey = \"4cf20fe539014953b8a5dacf6730f93b\";\r\n    var endpoint = \"https://api.cognitive.microsofttranslator.com\";\r\n\r\n    // Add your location, also known as region. The default is global.\r\n    // This is required if using a Cognitive Services resource.\r\n    var location = \"westeurope\";\r\n\r\n    axios({\r\n        baseURL: endpoint,\r\n        url: '/translate',\r\n        method: 'post',\r\n        headers: {\r\n            'Ocp-Apim-Subscription-Key': subscriptionKey,\r\n            'Ocp-Apim-Subscription-Region': location,\r\n            'Content-type': 'application/json',\r\n            'X-ClientTraceId': uuidv4().toString()\r\n        },\r\n        params: {\r\n            'api-version': '3.0',\r\n            'from': fromLanguage,\r\n            'to': toLanguage\r\n        },\r\n        data: [{\r\n            'text': word\r\n        }],\r\n        responseType: 'json'\r\n    }).then(function(response){\r\n        if(response.data[0].translations[0].text == \"\"){\r\n            onFail(\"Failed to translate word\")\r\n        }else{\r\n            onSuccess(response.data[0].translations[0].text)\r\n        }\r\n    }).catch(error => {\r\n        onFail(error)\r\n    })\r\n}","C:\\idioly_react\\idioly\\client\\src\\components\\translatableWord.js",["137","138","139","140","141","142","143","144","145"],"import React, { useState } from 'react'\r\nimport { translateWord } from 'translateActions'\r\nimport './components.css'\r\nimport {getTodaysDateString, MAX_TRANSLATIONS_TILL_LOGIN, isLoggedIn} from 'common'\r\nimport {trimLeft, trimRight} from 'common'\r\nimport {showLogInScreen} from 'actions/commonActions'\r\nimport { useSelector } from 'react-redux'\r\nimport {addUserWordToDB} from 'actions/userWordsActions'\r\n\r\nexport default function TranslatableWord (props){\r\n    const TRANSLATED_WORDS_COUNT_TODAY_KEY = \"TRANSLATED_WORDS_COUNT_TODAY_KEY\"\r\n\r\n    const [isTranslated, setIsTranslated] = useState(false)\r\n    const [translation, setTranslation] = useState(\" \")\r\n    const [wordImageSrc, setWordImageSrc] = useState(require('images/plus.png').default)\r\n\r\n    const isLoggedIn = useSelector(state => { \r\n        return state.commonReducer.loggedInWith != \"NONE\"\r\n    })\r\n\r\n    const userID = useSelector(state => state.commonReducer.loggedInUserID)\r\n    const fromLanguage = useSelector(state => state.commonReducer.fromLanguage)\r\n    const toLanguage = useSelector(state => state.commonReducer.toLanguage)\r\n    const userWords = useSelector(state => state.commonReducer.userWords)\r\n\r\n    var translateClickedWord = () => {\r\n        var numOfTranslatedWordsToday = getTodaysNumOfTranslatedWordFromLocalStorage()\r\n        if(isLoggedIn || numOfTranslatedWordsToday < MAX_TRANSLATIONS_TILL_LOGIN){\r\n            if(isLoggedIn){\r\n                const translatedWord = userWords.find(word => word.word == props.word)\r\n                if(typeof translatedWord !== 'undefined'){\r\n                    setIsTranslated(true)\r\n                    setTranslation(translatedWord.translation)\r\n                    increaseNumOfTranslatedWordsToday()\r\n                }else{\r\n                    translateWord(props.word, fromLanguage, toLanguage, (translation) => {\r\n                        if(!isTranslated){  \r\n                            setIsTranslated(true)\r\n                            setTranslation(translation)\r\n                            increaseNumOfTranslatedWordsToday()\r\n                        }\r\n                    }, (error) => {\r\n                        alert(error)\r\n                    })\r\n                }\r\n            }else{\r\n                translateWord(props.word, fromLanguage, toLanguage, (translation) => {\r\n                    if(!isTranslated){  \r\n                        setIsTranslated(true)\r\n                        setTranslation(translation)\r\n                        increaseNumOfTranslatedWordsToday()\r\n                    }\r\n                }, (error) => {\r\n                    alert(error)\r\n                })\r\n            }\r\n        }else{\r\n            showLogInScreen()\r\n        }\r\n    }\r\n\r\n    var increaseNumOfTranslatedWordsToday = () => {\r\n        let dateToday = getTodaysDateString()\r\n\r\n        let translatedWordsObjectJson = localStorage.getItem(TRANSLATED_WORDS_COUNT_TODAY_KEY)\r\n        if(translatedWordsObjectJson != null){\r\n            let translatedWordsTodayObject = JSON.parse(translatedWordsObjectJson)\r\n            if(translatedWordsTodayObject.date == dateToday){\r\n                translatedWordsTodayObject.numOfTranslatedWords += 1\r\n                localStorage.setItem(TRANSLATED_WORDS_COUNT_TODAY_KEY, JSON.stringify(translatedWordsTodayObject));\r\n            }else{\r\n                let translatedWordsTodayObject = {date: dateToday, numOfTranslatedWords: 1}\r\n                localStorage.setItem(TRANSLATED_WORDS_COUNT_TODAY_KEY, JSON.stringify(translatedWordsTodayObject));\r\n            }\r\n        }else{\r\n            let translatedWordsTodayObject = {date: dateToday, numOfTranslatedWords: 1}\r\n            localStorage.setItem(TRANSLATED_WORDS_COUNT_TODAY_KEY, JSON.stringify(translatedWordsTodayObject));\r\n        }\r\n    }\r\n\r\n    var getTodaysNumOfTranslatedWordFromLocalStorage = () => {\r\n        let todaysTranslatedWordsCountJson = localStorage.getItem(TRANSLATED_WORDS_COUNT_TODAY_KEY )\r\n        \r\n        if(todaysTranslatedWordsCountJson == null)return 0\r\n        else{\r\n            let translatedCountObject = JSON.parse(todaysTranslatedWordsCountJson)\r\n            let dateToday = getTodaysDateString()\r\n            if(translatedCountObject.date == dateToday)return translatedCountObject.numOfTranslatedWords\r\n            else return 0\r\n        }\r\n    }\r\n\r\n    var addWordToDB = (word, translation) => {\r\n        if(isLoggedIn){\r\n            const translatedWord = userWords.find(word => word.word == props.word)\r\n            if(typeof translatedWord === 'undefined'){\r\n                addUserWordToDB(userID, fromLanguage, toLanguage, word, translation, '', res => {\r\n                    console.log('got result from add user word: ' + res)\r\n                    setWordImageSrc(require('images/check_mark_black.png').default)\r\n                }, error => {\r\n                    console.log('failed to add user word to db: ' + error)\r\n                })\r\n            }else{\r\n                setWordImageSrc(require('images/check_mark_black.png').default)\r\n            }\r\n        }else{\r\n            showLogInScreen()\r\n        }\r\n    }\r\n\r\n    return <div class=\"textWord\" onClick={() => { translateClickedWord() }}>\r\n        <div class=\"wordTranslation\" onClick={() => addWordToDB(props.word, translation)}>\r\n            <span class=\"wordTranslation2\">{translation} </span><span class=\"invisible\">a</span>\r\n            {isTranslated? <img src={wordImageSrc} className=\"wordPlusImage\" onClick={() => addWordToDB(props.word)} /> : \"\"}            \r\n        </div>\r\n        <div class=\"wordWord\"><span>{props.word}&nbsp;</span></div>\r\n    </div>\r\n}","C:\\idioly_react\\idioly\\client\\src\\common.js",["146","147","148","149","150","151","152","153","154","155","156","157"],"\r\nexport function getTodaysDateString(){\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    let dateToday = dd + '/' + mm + '/'  + yyyy\r\n\r\n    return dateToday\r\n}\r\n\r\nexport const MAX_TRANSLATIONS_TILL_LOGIN = 10000\r\n\r\nexport const trimRight = function(str, charlist) {\r\n    if (charlist === undefined)\r\n      charlist = \"\\s\";\r\n  \r\n    return str.replace(new RegExp(\"[\" + charlist + \"]+$\"), \"\");\r\n  };\r\n\r\nexport const trimLeft = function(str, charlist) {\r\n    if (charlist === undefined)\r\n      charlist = \"\\s\";\r\n  \r\n    return str.replace(new RegExp(\"^[\" + charlist + \"]+\"), \"\");\r\n  };    \r\n\r\n\r\n  export const isTextExistsInText = (text, largerText) => {\r\n    var textWords = text.split(/[\\s\\t,\\n\"'\\(\\)\\-\\!\\?]+/)\r\n    var largerTextWords = largerText.split(/[\\t\\s,\\n\"'\\(\\)\\-\\!\\?]+/)\r\n    \r\n    var numOfWordsToCheck = textWords.length / 4\r\n\r\n    if(numOfWordsToCheck > 10){\r\n      numOfWordsToCheck = 10\r\n    }\r\n\r\n    var wordsToFindInLargerText = []\r\n    \r\n    for(let i =0; i< numOfWordsToCheck; i++){\r\n      let wordIndex = Math.floor(Math.random() * textWords.length);\r\n      while(wordsToFindInLargerText.indexOf(textWords[wordIndex]) != -1){\r\n        wordIndex = Math.floor(Math.random() * textWords.length)\r\n      }\r\n      wordsToFindInLargerText.push(textWords[wordIndex])\r\n    }\r\n\r\n    wordsToFindInLargerText.forEach(wordToFindIndex => {\r\n      if(largerTextWords.indexOf(wordToFindIndex) == -1) return false\r\n    })\r\n\r\n    return true    \r\n  }","C:\\idioly_react\\idioly\\client\\src\\layouts\\loginScreen.js",[],"C:\\idioly_react\\idioly\\client\\src\\actions\\commonActions.js",[],"C:\\idioly_react\\idioly\\client\\src\\store.js",[],"C:\\idioly_react\\idioly\\client\\src\\reducers\\types.js",[],"C:\\idioly_react\\idioly\\client\\src\\reducers\\rootReducer.js",[],"C:\\idioly_react\\idioly\\client\\src\\reducers\\commonReducer.js",[],"C:\\idioly_react\\idioly\\client\\src\\components\\google.js",["158","159","160","161"],"import React, { Component } from 'react'\r\nimport GoogleLogin from 'react-google-login';\r\nimport './socialButtons.css'\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    CHANGE_LOGGED_IN_STATE,\r\n    CHANGE_LOGGED_IN_TYPE,\r\n    SET_LOGGED_IN_USER_ID,\r\n    SET_LOGGED_IN_USER_FIRST_NAME,\r\n    SET_LOGGED_IN_USER_LAST_NAME,\r\n    SET_LOGGED_IN_USER_EMAIL,\r\n    SET_LOGGED_IN_USER_WORDS,\r\n} from 'reducers/types'\r\nimport store from 'store'\r\nimport { loadOrCreateUserIfNotExists } from 'actions/userActions.js'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getUserWordsFromDB } from 'actions/userWordsActions';\r\n\r\nclass GoogleButton extends Component {\r\n\r\n    onsuccessGoogleLogin = (response) => {\r\n        // If responseType is not 'code', callback will return the GoogleAuth object.\r\n        // If responseType is 'code', callback will return the offline token for use on your server.\r\n\r\n        console.log(response);\r\n        this.props.dispatch({type: CHANGE_LOGGED_IN_TYPE, payload: \"Google\"});\r\n        this.props.dispatch({ type: CHANGE_LOGGED_IN_STATE, payload: true });\r\n        this.props.dispatch({ type: SET_LOGGED_IN_USER_ID, payload: response.googleId });\r\n        this.props.dispatch({ type: SET_LOGGED_IN_USER_FIRST_NAME, payload: response.Nt.EW });\r\n        this.props.dispatch({ type: SET_LOGGED_IN_USER_LAST_NAME, payload: response.Nt.IU });\r\n        this.props.dispatch({ type: SET_LOGGED_IN_USER_EMAIL, payload: response.Nt.uu });\r\n\r\n        if(this.props.pageAfterLogin !== undefined && this.props.pageAfterLogin != ''){\r\n            this.context.history.push(\"/\" + this.props.pageAfterLogin)            \r\n        }\r\n\r\n        getUserWordsFromDB(response.googleId, res => {\r\n            this.props.dispatch({ type: SET_LOGGED_IN_USER_WORDS, payload: res.data });\r\n        }, error => {\r\n            alert(error)\r\n        })\r\n    }\r\n\r\n    onFailGoogleLogin = (response) => {\r\n        this.props.dispatch({ type: CHANGE_LOGGED_IN_STATE, payload: false });\r\n        console.log(response);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <GoogleLogin\r\n                clientId=\"961387820511-gnr9u3o9qls8663npvioavj8ajk6081r.apps.googleusercontent.com\"\r\n                buttonText=\"Login with Google\"\r\n                className=\"socialButton\"\r\n                onSuccess={this.onsuccessGoogleLogin}\r\n                // onFocus={this.props.onLoginScreenFocus}\r\n                // onBlur={this.onLoginBlur}\r\n                onFailure={this.onFailGoogleLogin}\r\n            />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(GoogleButton);\r\n\r\n","C:\\idioly_react\\idioly\\client\\src\\components\\facebook.js",["162","163","164"],"import FacebookLogin from 'react-facebook-login';\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { loadOrCreateUserIfNotExists } from 'actions/userActions.js'\r\nimport { bindActionCreators } from 'redux';\r\nimport './socialButtons.css'\r\nimport {\r\n  CHANGE_LOGGED_IN_TYPE,\r\n  SET_CURRENT_PAGE,\r\n} from 'reducers/types'\r\nimport store from 'store'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport createHistory from \"history/createBrowserHistory\"\r\n\r\nclass facebook extends Component {\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state = {\r\n      // isToRedirect: false,\r\n      // redirectPath: \"/\" + props.pageAfterLogin,\r\n    }\r\n  }\r\n\r\n  responseFacebook = (response) => {\r\n    if (response.accessToken) {\r\n      var fullName = response.name;\r\n      var firstName = fullName.split(\" \")[0]\r\n      var lastName = fullName.split(\" \")[1]\r\n      var userID = response.userID\r\n\r\n      if(fullName === undefined){\r\n        console.log('Connection to facebook timed out');\r\n        return\r\n      }\r\n\r\n      if (this.props.logInSuccessCallback !== undefined)\r\n        this.props.logInSuccessCallback()\r\n\r\n      store.dispatch({type: CHANGE_LOGGED_IN_TYPE, payload: \"Facebook\"});\r\n\r\n      var user = {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        id: userID\r\n      }\r\n\r\n      this.props.loadOrCreateUserIfNotExists(user);\r\n\r\n      if(this.props.pageAfterLogin !== undefined && this.props.pageAfterLogin != ''){\r\n        // const history = useHistory();\r\n        // history.push(\"/\" + this.props.pageAfterLogin);\r\n        // this.context.history.push(\"/\" + this.props.pageAfterLogin)\r\n        // this.props.router.push(\"/\" + this.props.pageAfterLogin)\r\n        // this.props.history.push(\"/\" + this.props.pageAfterLogin)\r\n        this.setState({isToRedirect: true})\r\n        const history = createHistory();\r\n        history.push(\"/\" + this.props.pageAfterLogin);\r\n        // store.dispatch({type: SET_CURRENT_PAGE, payload: this.props.pageAfterLogin});\r\n        // in your function then call add the below \r\n        // const history = createHistory();\r\n        // // Use push, replace, and go to navigate around.\r\n        // history.push(\"/\" + this.props.pageAfterLogin);\r\n      }\r\n\r\n    } else {\r\n      console.log('User cancelled login or did not fully authorize.');\r\n    }\r\n  }\r\n\r\n  componentClicked = () => {\r\n      console.log('cliked fb');\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isToRedirect){\r\n      return <Redirect to={this.state.redirectPath} />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <FacebookLogin  //https://github.com/keppelen/react-facebook-login\r\n            appId=\"1886935948065131\"\r\n            autoLoad={true}\r\n            disabled={false}\r\n            cssClass=\"facebookButton\"\r\n            fields=\"name,email,picture\"\r\n            onClick={this.componentClicked}\r\n            // onFocus={this.props.onLoginScreenFocus}\r\n            // onBlur={this.props.onLoginBlur}\r\n            callback={this.responseFacebook} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return({\r\n    loadOrCreateUserIfNotExists: bindActionCreators (loadOrCreateUserIfNotExists, dispatch),\r\n  })\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedIn: state.commonReducer.loggedIn\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(facebook); \r\n",["165","166"],"C:\\idioly_react\\idioly\\client\\src\\actions\\userActions.js",["167","168","169"],"//user actions\r\n\r\nimport axios from 'axios';\r\nimport { \r\n  SET_LOGGED_IN_USER, \r\n  SET_LOGGED_IN_USER_FIRST_NAME, \r\n  SET_LOGGED_IN_USER_ID, \r\n  SET_LOGGED_IN_USER_LAST_NAME, \r\n  CHANGE_LOGGED_IN_STATE,\r\n  CHANGE_LOGGED_IN_TYPE,\r\n  SET_LOGGED_IN_USER_EMAIL,\r\n} from 'reducers/types'\r\nimport store from 'store'\r\n\r\n//works till the return\r\nexport const loadOrCreateUserIfNotExists = user => dispatch => {\r\n  console.log('in loadOrCreateUserIfNotExists beginning:' + user)\r\n  var isUserExists = false;\r\n  console.log('sending get request: api/user/' + `${user.id}`);\r\n  \r\n  axios.get(`/api/user/${user.id}`).then(res => {  // => dispatch => \r\n    console.log('found: ' + res.data.length + ' users')\r\n    // return res.data;\r\n    if(res.data.length == 0){\r\n        console.log('sending post: /api/user/create')\r\n        \r\n        console.log('userObject: ' + JSON.stringify(user))\r\n        axios.post(`/api/user/create`,user)\r\n        .then(res => {\r\n          console.log('sent post: api/user/create: ' + user)\r\n          dispatch({\r\n            type: SET_LOGGED_IN_USER_ID,\r\n            payload: res.data.id\r\n          })\r\n          dispatch({\r\n            type: SET_LOGGED_IN_USER_FIRST_NAME,\r\n            payload: res.data.firstName\r\n          })\r\n          dispatch({\r\n            type: SET_LOGGED_IN_USER_LAST_NAME,\r\n            payload: res.data.lastName\r\n          })\r\n          dispatch({\r\n            type: SET_LOGGED_IN_USER_EMAIL,\r\n            payload: res.data.email\r\n          })\r\n          dispatch({ type: CHANGE_LOGGED_IN_STATE, payload: true });\r\n        });\r\n      // };\r\n    }else{\r\n      console.log('user exists, updating store')\r\n          dispatch({\r\n            type: SET_LOGGED_IN_USER_ID,\r\n            payload: res.data[0].id\r\n          })\r\n          dispatch({\r\n            type: SET_LOGGED_IN_USER_FIRST_NAME,\r\n            payload: res.data[0].firstName\r\n          })\r\n          dispatch({\r\n            type: SET_LOGGED_IN_USER_LAST_NAME,\r\n            payload: res.data[0].lastName\r\n          })\r\n          dispatch({\r\n            type: SET_LOGGED_IN_USER_EMAIL,\r\n            payload: res.data[0].email\r\n          })\r\n          dispatch({ type: CHANGE_LOGGED_IN_STATE, payload: true });\r\n\r\n          dispatch(getUserFromDB(user.id))\r\n    }\r\n  }).then(res => {\r\n\r\n  })\r\n  .catch(error => \r\n    console.log('error: ' + error));\r\n}\r\n\r\nexport const createUser = user => dispatch => {\r\n  console.log('in userActions->create user')\r\n  \r\n  console.log('sending post: api/user/create:' + user)\r\n  axios.post(`/api/user/create`,user)\r\n  .then(res =>\r\n    {\r\n      console.log('sent post: api/user/create:' + res.data)\r\n      dispatch({\r\n        type: SET_LOGGED_IN_USER,\r\n        payload: res.data\r\n      })\r\n    }\r\n  );\r\n}\r\n\r\n// //'Liked' / 'Created' \r\nexport const getUserFromDB = userID => dispatch => {\r\n  console.log('sending post:  api/user/getUser/, userID: ' + userID)\r\n  axios.post(`/api/user/getUser`,{userID})\r\n  .then(res =>\r\n    {\r\n      console.log('got response from: /api/user/getUser');\r\n    }\r\n  );\r\n}\r\n\r\nexport const changeLoggedInWithType = (newType) => {\r\n  store.dispatch({\r\n    type: CHANGE_LOGGED_IN_TYPE,\r\n    payload: newType\r\n  })\r\n}\r\n\r\n\r\n\r\n","C:\\idioly_react\\idioly\\client\\src\\actions\\userWordsActions.js",["170","171"],"//user actions\r\n\r\nimport axios from 'axios';\r\nimport { \r\n  SET_USER_WORDS\r\n} from 'reducers/types'\r\nimport store from 'store'\r\n\r\nexport const getUserWordsFromDB = (userID, onSuccess, onFail) => {\r\n    console.log('sending post:  api/userWords/getUserWords/' + userID)\r\n    axios.get(`http://localhost:9000/userWords/getUserWords/${userID}`)\r\n    .then(res =>\r\n      {\r\n        onSuccess(res)\r\n        console.log('got response from: /api/user/getUser');\r\n      }\r\n    ).catch(error => {\r\n        onFail(error)\r\n    });\r\n  }\r\n\r\nexport const addUserWordToDB = (userID, fromLanguage, toLanguage, word, translation, sentence, onSuccess, onFail) => {\r\n    console.log('sending post:  api/userWords/addUserWord/')\r\n    console.log(`userID: ${userID}, fromLanguage: ${fromLanguage}, toLanguage: ${toLanguage}, word: ${word}, translation: ${translation}, sentence: ${sentence}`)\r\n    axios.post(`http://localhost:9000/userwords/adduserword`,{userID, fromLanguage, toLanguage, word, translation, sentence})\r\n        .then(res =>\r\n        {\r\n            console.log('added word to user words table')\r\n            onSuccess(res)\r\n        }\r\n        ).catch(error => {\r\n            console.log('failed to add word to userWords')\r\n            onFail(error)\r\n        }\r\n    );\r\n  }","C:\\idioly_react\\idioly\\client\\src\\actions\\textsActions.js",[],"C:\\idioly_react\\idioly\\client\\src\\layouts\\addTextLayout.js",["172","173","174","175","176","177","178","179"],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":12},{"ruleId":"184","severity":1,"message":"188","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":16},{"ruleId":"184","severity":1,"message":"189","line":4,"column":17,"nodeType":"186","messageId":"187","endLine":4,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":27,"column":21,"nodeType":"192","endLine":27,"endColumn":90},{"ruleId":"193","severity":1,"message":"194","line":1,"column":1,"nodeType":"195","endLine":5,"endColumn":2},{"ruleId":"184","severity":1,"message":"196","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":20},{"ruleId":"193","severity":1,"message":"194","line":9,"column":1,"nodeType":"195","endLine":94,"endColumn":2},{"ruleId":"197","severity":1,"message":"198","line":18,"column":49,"nodeType":"199","messageId":"200","endLine":18,"endColumn":51},{"ruleId":"193","severity":1,"message":"194","line":1,"column":1,"nodeType":"195","endLine":6,"endColumn":2},{"ruleId":"193","severity":1,"message":"194","line":1,"column":1,"nodeType":"195","endLine":5,"endColumn":2},{"ruleId":"184","severity":1,"message":"201","line":2,"column":38,"nodeType":"186","messageId":"187","endLine":2,"endColumn":44},{"ruleId":"193","severity":1,"message":"194","line":7,"column":1,"nodeType":"195","endLine":32,"endColumn":2},{"ruleId":"202","severity":1,"message":"203","line":18,"column":8,"nodeType":"204","endLine":18,"endColumn":10,"suggestions":"205"},{"ruleId":"184","severity":1,"message":"206","line":14,"column":9,"nodeType":"186","messageId":"187","endLine":14,"endColumn":12},{"ruleId":"184","severity":1,"message":"207","line":15,"column":9,"nodeType":"186","messageId":"187","endLine":15,"endColumn":13},{"ruleId":"197","severity":1,"message":"208","line":35,"column":50,"nodeType":"199","messageId":"200","endLine":35,"endColumn":52},{"ruleId":"184","severity":1,"message":"196","line":4,"column":59,"nodeType":"186","messageId":"187","endLine":4,"endColumn":69},{"ruleId":"184","severity":1,"message":"209","line":5,"column":9,"nodeType":"186","messageId":"187","endLine":5,"endColumn":17},{"ruleId":"184","severity":1,"message":"210","line":5,"column":19,"nodeType":"186","messageId":"187","endLine":5,"endColumn":28},{"ruleId":"197","severity":1,"message":"198","line":18,"column":49,"nodeType":"199","messageId":"200","endLine":18,"endColumn":51},{"ruleId":"197","severity":1,"message":"208","line":30,"column":73,"nodeType":"199","messageId":"200","endLine":30,"endColumn":75},{"ruleId":"197","severity":1,"message":"208","line":68,"column":48,"nodeType":"199","messageId":"200","endLine":68,"endColumn":50},{"ruleId":"197","severity":1,"message":"208","line":88,"column":43,"nodeType":"199","messageId":"200","endLine":88,"endColumn":45},{"ruleId":"197","severity":1,"message":"208","line":95,"column":69,"nodeType":"199","messageId":"200","endLine":95,"endColumn":71},{"ruleId":"190","severity":1,"message":"191","line":114,"column":28,"nodeType":"192","endLine":114,"endColumn":120},{"ruleId":"211","severity":1,"message":"212","line":17,"column":19,"nodeType":"213","messageId":"214","endLine":17,"endColumn":20,"suggestions":"215"},{"ruleId":"211","severity":1,"message":"212","line":24,"column":19,"nodeType":"213","messageId":"214","endLine":24,"endColumn":20,"suggestions":"216"},{"ruleId":"211","severity":1,"message":"217","line":31,"column":43,"nodeType":"213","messageId":"214","endLine":31,"endColumn":44,"suggestions":"218"},{"ruleId":"211","severity":1,"message":"219","line":31,"column":45,"nodeType":"213","messageId":"214","endLine":31,"endColumn":46,"suggestions":"220"},{"ruleId":"211","severity":1,"message":"221","line":31,"column":49,"nodeType":"213","messageId":"214","endLine":31,"endColumn":50,"suggestions":"222"},{"ruleId":"211","severity":1,"message":"223","line":31,"column":51,"nodeType":"213","messageId":"214","endLine":31,"endColumn":52,"suggestions":"224"},{"ruleId":"211","severity":1,"message":"217","line":32,"column":55,"nodeType":"213","messageId":"214","endLine":32,"endColumn":56,"suggestions":"225"},{"ruleId":"211","severity":1,"message":"219","line":32,"column":57,"nodeType":"213","messageId":"214","endLine":32,"endColumn":58,"suggestions":"226"},{"ruleId":"211","severity":1,"message":"221","line":32,"column":61,"nodeType":"213","messageId":"214","endLine":32,"endColumn":62,"suggestions":"227"},{"ruleId":"211","severity":1,"message":"223","line":32,"column":63,"nodeType":"213","messageId":"214","endLine":32,"endColumn":64,"suggestions":"228"},{"ruleId":"197","severity":1,"message":"198","line":44,"column":67,"nodeType":"199","messageId":"200","endLine":44,"endColumn":69},{"ruleId":"197","severity":1,"message":"208","line":51,"column":51,"nodeType":"199","messageId":"200","endLine":51,"endColumn":53},{"ruleId":"184","severity":1,"message":"229","line":14,"column":8,"nodeType":"186","messageId":"187","endLine":14,"endColumn":13},{"ruleId":"184","severity":1,"message":"230","line":15,"column":10,"nodeType":"186","messageId":"187","endLine":15,"endColumn":37},{"ruleId":"184","severity":1,"message":"231","line":16,"column":10,"nodeType":"186","messageId":"187","endLine":16,"endColumn":20},{"ruleId":"197","severity":1,"message":"198","line":33,"column":81,"nodeType":"199","messageId":"200","endLine":33,"endColumn":83},{"ruleId":"184","severity":1,"message":"232","line":9,"column":3,"nodeType":"186","messageId":"187","endLine":9,"endColumn":19},{"ruleId":"184","severity":1,"message":"233","line":13,"column":10,"nodeType":"186","messageId":"187","endLine":13,"endColumn":20},{"ruleId":"197","severity":1,"message":"198","line":51,"column":79,"nodeType":"199","messageId":"200","endLine":51,"endColumn":81},{"ruleId":"180","replacedBy":"234"},{"ruleId":"182","replacedBy":"235"},{"ruleId":"184","severity":1,"message":"236","line":18,"column":7,"nodeType":"186","messageId":"187","endLine":18,"endColumn":19},{"ruleId":"237","severity":1,"message":"238","line":19,"column":48,"nodeType":"199","messageId":"239","endLine":19,"endColumn":49},{"ruleId":"197","severity":1,"message":"208","line":24,"column":24,"nodeType":"199","messageId":"200","endLine":24,"endColumn":26},{"ruleId":"184","severity":1,"message":"240","line":5,"column":3,"nodeType":"186","messageId":"187","endLine":5,"endColumn":17},{"ruleId":"184","severity":1,"message":"229","line":7,"column":8,"nodeType":"186","messageId":"187","endLine":7,"endColumn":13},{"ruleId":"193","severity":1,"message":"194","line":12,"column":1,"nodeType":"195","endLine":124,"endColumn":2},{"ruleId":"184","severity":1,"message":"241","line":19,"column":12,"nodeType":"186","messageId":"187","endLine":19,"endColumn":26},{"ruleId":"184","severity":1,"message":"242","line":19,"column":28,"nodeType":"186","messageId":"187","endLine":19,"endColumn":45},{"ruleId":"184","severity":1,"message":"243","line":21,"column":12,"nodeType":"186","messageId":"187","endLine":21,"endColumn":25},{"ruleId":"184","severity":1,"message":"244","line":21,"column":27,"nodeType":"186","messageId":"187","endLine":21,"endColumn":43},{"ruleId":"184","severity":1,"message":"245","line":23,"column":12,"nodeType":"186","messageId":"187","endLine":23,"endColumn":28},{"ruleId":"184","severity":1,"message":"246","line":23,"column":30,"nodeType":"186","messageId":"187","endLine":23,"endColumn":49},{"ruleId":"197","severity":1,"message":"208","line":79,"column":61,"nodeType":"199","messageId":"200","endLine":79,"endColumn":63},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'Component' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'isLoggedIn' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.state.readingText.text'. Either include it or remove the dependency array.","ArrayExpression",["249"],"'top' is assigned a value but never used.","'left' is assigned a value but never used.","Expected '===' and instead saw '=='.","'trimLeft' is defined but never used.","'trimRight' is defined but never used.","no-useless-escape","Unnecessary escape character: \\s.","Literal","unnecessaryEscape",["250","251"],["252","253"],"Unnecessary escape character: \\(.",["254","255"],"Unnecessary escape character: \\).",["256","257"],"Unnecessary escape character: \\!.",["258","259"],"Unnecessary escape character: \\?.",["260","261"],["262","263"],["264","265"],["266","267"],["268","269"],"'store' is defined but never used.","'loadOrCreateUserIfNotExists' is defined but never used.","'useHistory' is defined but never used.","'SET_CURRENT_PAGE' is defined but never used.","'withRouter' is defined but never used.",["247"],["248"],"'isUserExists' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'SET_USER_WORDS' is defined but never used.","'isContentEmpty' is assigned a value but never used.","'setIsContentEmpty' is assigned a value but never used.","'isAuthorEmpty' is assigned a value but never used.","'setIsAuthorEmpty' is assigned a value but never used.","'isSourceUrlEmpty' is assigned a value but never used.","'setIsSourceUrlEmpty' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},{"messageId":"272","fix":"273","desc":"274"},{"messageId":"275","fix":"276","desc":"277"},{"messageId":"272","fix":"278","desc":"274"},{"messageId":"275","fix":"279","desc":"277"},{"messageId":"272","fix":"280","desc":"274"},{"messageId":"275","fix":"281","desc":"277"},{"messageId":"272","fix":"282","desc":"274"},{"messageId":"275","fix":"283","desc":"277"},{"messageId":"272","fix":"284","desc":"274"},{"messageId":"275","fix":"285","desc":"277"},{"messageId":"272","fix":"286","desc":"274"},{"messageId":"275","fix":"287","desc":"277"},{"messageId":"272","fix":"288","desc":"274"},{"messageId":"275","fix":"289","desc":"277"},{"messageId":"272","fix":"290","desc":"274"},{"messageId":"275","fix":"291","desc":"277"},{"messageId":"272","fix":"292","desc":"274"},{"messageId":"275","fix":"293","desc":"277"},{"messageId":"272","fix":"294","desc":"274"},{"messageId":"275","fix":"295","desc":"277"},"Update the dependencies array to be: [location.state.readingText.text]",{"range":"296","text":"297"},"removeEscape",{"range":"298","text":"299"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"300","text":"301"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"302","text":"299"},{"range":"303","text":"301"},{"range":"304","text":"299"},{"range":"305","text":"301"},{"range":"306","text":"299"},{"range":"307","text":"301"},{"range":"308","text":"299"},{"range":"309","text":"301"},{"range":"310","text":"299"},{"range":"311","text":"301"},{"range":"312","text":"299"},{"range":"313","text":"301"},{"range":"314","text":"299"},{"range":"315","text":"301"},{"range":"316","text":"299"},{"range":"317","text":"301"},{"range":"318","text":"299"},{"range":"319","text":"301"},[542,544],"[location.state.readingText.text]",[476,477],"",[476,476],"\\",[661,662],[661,661],[853,854],[853,853],[855,856],[855,855],[859,860],[859,859],[861,862],[861,861],[923,924],[923,923],[925,926],[925,925],[929,930],[929,929],[931,932],[931,931]]